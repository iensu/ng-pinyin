(function () {
  'use strict';
  var app = angular.module('ng-pinyin', []);
  app.filter('pinyin', function () {
    return function (text) {
      var tonePtn = /([aeiouvüAEIOUVÜ]{1,2}(n|ng|r|\'er|N|NG|R|\'ER){0,1}[1234])/g;
      var toneMap = {
          a: [
            '\u0101',
            '\xe1',
            '\u01ce',
            '\xe0'
          ],
          A: [
            '\u0100',
            '\xc1',
            '\u01cd',
            '\xc0'
          ],
          ai: [
            '\u0101i',
            '\xe1i',
            '\u01cei',
            '\xe0i'
          ],
          AI: [
            '\u0100I',
            '\xc1I',
            '\u01cdI',
            '\xc0I'
          ],
          ao: [
            '\u0101o',
            '\xe1o',
            '\u01ceo',
            '\xe0o'
          ],
          AO: [
            '\u0100O',
            '\xc1O',
            '\u01cdO',
            '\xc0O'
          ],
          e: [
            '\u0113',
            '\xe9',
            '\u011b',
            '\xe8'
          ],
          E: [
            '\u0112',
            '\xc9',
            '\u011a',
            '\xc8'
          ],
          ei: [
            '\u0113i',
            '\xe9i',
            '\u011bi',
            '\xe8i'
          ],
          EI: [
            '\u0112I',
            '\xc9I',
            '\u011aI',
            '\xc8I'
          ],
          i: [
            '\u012b',
            '\xed',
            '\u01d0',
            '\xec'
          ],
          I: [
            '\u012a',
            '\xcd',
            '\u01cf',
            '\xcc'
          ],
          ia: [
            'i\u0101',
            'i\xe1',
            'i\u01ce',
            'i\xe0'
          ],
          IA: [
            'I\u0100',
            'I\xc1',
            'I\u01cd',
            'I\xc0'
          ],
          io: [
            'i\u014d',
            'i\xf3',
            'i\u01d2',
            'i\xf2'
          ],
          IO: [
            'I\u014c',
            'I\xd3',
            'I\u01d1',
            'I\xd2'
          ],
          iu: [
            'i\u016b',
            'i\xfa',
            'i\u01d4',
            'i\xf9'
          ],
          IU: [
            'I\u016a',
            'I\xda',
            'I\u01d3',
            'I\xd9'
          ],
          o: [
            '\u014d',
            '\xf3',
            '\u01d2',
            '\xf2'
          ],
          O: [
            '\u014c',
            '\xd3',
            '\u01d1',
            '\xd2'
          ],
          ou: [
            '\u014du',
            '\xf3u',
            '\u01d2u',
            '\xf2u'
          ],
          OU: [
            '\u014cU',
            '\xd3U',
            '\u01d1U',
            '\xd2U'
          ],
          u: [
            '\u016b',
            '\xfa',
            '\u01d4',
            '\xf9'
          ],
          U: [
            '\u016a',
            '\xda',
            '\u01d3',
            '\xd9'
          ],
          ua: [
            'u\u0101',
            'u\xe1',
            'u\u01ce',
            'u\xe0'
          ],
          UA: [
            'U\u0100',
            'U\xc1',
            'U\u01cd',
            'U\xc0'
          ],
          ue: [
            'u\u0113',
            'u\xe9',
            'u\u011b',
            'u\xe8'
          ],
          UE: [
            'U\u0112',
            'U\xc9',
            'U\u011a',
            'U\xc8'
          ],
          ui: [
            'u\u012b',
            'u\xed',
            'u\u01d0',
            'u\xec'
          ],
          UI: [
            'U\u012a',
            'U\xcd',
            'U\u01cf',
            'U\xcc'
          ],
          uo: [
            'u\u014d',
            'u\xf3',
            'u\u01d2',
            'u\xf2'
          ],
          UO: [
            'U\u014c',
            'U\xd3',
            'U\u01d1',
            'U\xd2'
          ],
          v: [
            '\u01d6',
            '\u01d8',
            '\u01da',
            '\u01dc'
          ],
          V: [
            '\u01d5',
            '\u01d7',
            '\u01d9',
            '\u01db'
          ],
          ve: [
            '\u01d6e',
            '\u01d8e',
            '\u01dae',
            '\u01dce'
          ],
          VE: [
            '\u01d5E',
            '\u01d7E',
            '\u01d9E',
            '\u01dbE'
          ],
          ü: [
            '\u01d6',
            '\u01d8',
            '\u01da',
            '\u01dc'
          ],
          Ü: [
            '\u01d5',
            '\u01d7',
            '\u01d9',
            '\u01db'
          ],
          üe: [
            '\u01d6e',
            '\u01d8e',
            '\u01dae',
            '\u01dce'
          ],
          ÜE: [
            '\u01d5E',
            '\u01d7E',
            '\u01d9E',
            '\u01dbE'
          ]
        };
      var tones = text.match(tonePtn);
      if (tones) {
        tones.forEach(function (coda, idx, arr) {
          var toneIdx = parseInt(coda.slice(-1)) - 1;
          var vowel = coda.slice(0, -1);
          var suffix = vowel.match(/(n|ng|r|\'er|N|NG|R|\'ER)$/);
          vowel = vowel.replace(/(n|ng|r|\'er|N|NG|R|\'ER)$/, '');
          var replacement = suffix && toneMap[vowel][toneIdx] + suffix[0] || toneMap[vowel][toneIdx];
          text = text.replace(coda, replacement);
        });
      }
      return text;
    };
  });
  app.directive('ngPinyin', [
    '$timeout',
    'pinyinFilter',
    function ($timeout, pinyinFilter) {
      function link(scope, element, attrs, ngModelCtrl) {
        function convertToPinyin(text) {
          var updatedText = text;
          if (text && typeof text !== 'string') {
            throw Error('ng-pinyin: ng-model needs to refer to a string!');
          } else if (text) {
            updatedText = pinyinFilter(text);
          }
          if (updatedText !== text) {
            ngModelCtrl.$setViewValue(updatedText);
            ngModelCtrl.$render();
          }
          return text;
        }
        var modelValue = scope[attrs.ngModel];
        if (modelValue && typeof modelValue !== 'string') {
          throw Error('ng-pinyin: ng-model needs to refer to a string!');
        }
        ngModelCtrl.$parsers.push(convertToPinyin);
      }
      return {
        require: 'ngModel',
        restrict: 'A',
        link: link
      };
    }
  ]);
}());